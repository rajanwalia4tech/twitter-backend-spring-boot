spring.application.name=twitter
server.port: 4545

# Logging Configuration
logging.config=classpath:logback-spring.xml

# Set root log level
logging.level.root=INFO
# Set log file name (the actual rolling and pattern is controlled by logback-spring.xml)
logging.file.name=logs/application.log

# Console log pattern without colors (colors only via logback-spring.xml)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId}] [%thread] %-5level %logger{36} - %msg%n


# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/twitter_backend_db
spring.datasource.username=twitter_backend_user
spring.datasource.password=Twitter_Backend_Password@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Log SQL statements
#logging.level.org.hibernate.SQL=DEBUG

# Log SQL parameter bindings
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ? Log schema generation (DDL statements like CREATE TABLE)
#logging.level.org.hibernate.tool.hbm2ddl=DEBUG
#logging.level.org.hibernate.engine.jdbc.env.internal=DEBUG
#logging.level.org.hibernate.engine.jdbc.env.spi=DEBUG


# HikariCP connection pool settings
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true

# Optional: validation query to test connection health (for MySQL 8+)
spring.datasource.hikari.connection-test-query=SELECT 1